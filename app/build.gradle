plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "org.jetbrains.kotlin.plugin.allopen"
    id "androidx.navigation.safeargs.kotlin"
    id "com.github.triplet.play"
    id "com.github.breadmoirai.github-release"
    id "com.mikepenz.aboutlibraries.plugin"
    id "kotlin-parcelize"
    id "kotlin-kapt"
}

android {
    namespace "com.mckimquyen.notes"

    defaultConfig {
        applicationId "com.mckimquyen.notes"
        minSdkVersion 21
        compileSdk 34
        buildToolsVersion = "34.0.0"
        targetSdkVersion 34
        versionCode 20240904
        versionName "2024.09.04"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                compilerArgumentProviders(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
            }
        }
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }

    sourceSets {
        main {
            java.srcDirs += "src/main/kotlin"
        }
        debug {
            java.srcDirs += "src/debug/kotlin"
        }
        release {
            java.srcDirs += "src/release/kotlin"
        }

        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    signingConfigs {
        release {
//            if (project.hasProperty("releaseKeyStoreFile")) {
//                storeFile file(releaseKeyStoreFile)
//                storePassword releaseKeyStorePassword
//                keyAlias releaseKeyStoreKey
//                keyPassword releaseKeyStoreKeyPassword
//            }
            release {
                storeFile file("keystore.jks")
                storePassword KS_PW
                keyAlias KS_ALIAS
                keyPassword KS_PW
            }
        }
    }

    buildTypes {
        debug {
//            applicationIdSuffix ".debug"
            def takingScreenshots = System.getenv("taking_screenshots")
            buildConfigField "boolean", "ENABLE_DEBUG_FEATURES",
                    takingScreenshots == null ? "true" : (!takingScreenshots.toBoolean()).toString()
        }
        release {
//            applicationIdSuffix ".sync"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField "boolean", "ENABLE_DEBUG_FEATURES", "false"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += project.kotlinFlags
        freeCompilerArgs += [
                "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
        ]
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = defaultConfig.applicationId + buildType.name + "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode + ".apk"
        }
    }

    flavorDimensions.add("type")

    productFlavors {

        dev {
//            applicationId = "com.mckimquyen.notes.dev"
            dimension "type"
            buildConfigField("String", "FLAVOR_buildEnv", '"dev"')
            resValue ("string", "app_name", "Note Upside Down Cake DEV")

            resValue("string", "SDK_KEY", "e75FnQfS9XTTqM1Kne69U7PW_MBgAnGQTFvtwVVui6kRPKs5L7ws9twr5IQWwVfzPKZ5pF2IfDa7lguMgGlCyt")
            resValue("string", "BANNER", "")
            resValue("string", "INTER", "")

            resValue("string", "EnableAdInter", "true")
            resValue("string", "EnableAdBanner", "true")
        }

        production {
//            applicationId = "com.mckimquyen.notes"
            dimension "type"
            buildConfigField("String", "FLAVOR_buildEnv", '"prod"')
            resValue ("string", "app_name", "Note Upside Down Cake")

            resValue("string", "SDK_KEY", "e75FnQfS9XTTqM1Kne69U7PW_MBgAnGQTFvtwVVui6kRPKs5L7ws9twr5IQWwVfzPKZ5pF2IfDa7lguMgGlCyt")
            resValue("string", "BANNER", "")
            resValue("string", "INTER", "")

            resValue("string", "EnableAdInter", "true")
            resValue("string", "EnableAdBanner", "true")
        }

    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.13.1"
    implementation "androidx.fragment:fragment-ktx:1.8.2"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.recyclerview:recyclerview:1.3.2"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.preference:preference-ktx:1.2.1"
    implementation "com.google.android.material:material:1.10.0"
    implementation "com.maltaisn:recurpicker:2.1.7"
    implementation "com.mikepenz:aboutlibraries:10.9.2"
    implementation "com.mikepenz:aboutlibraries-core:10.9.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.20"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.1"
    implementation "com.google.dagger:dagger:2.48.1"
    kapt "com.google.dagger:dagger-compiler:2.48.1"
    //noinspection KaptUsageInsteadOfKsp
    kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2"
    // Navigation component
    implementation "androidx.navigation:navigation-ui-ktx:2.7.5"
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.5"
    // Debug
    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.12"
//    debugImplementation "com.github.YarikSOffice.Venom:venom:0.6.0"
//    releaseImplementation "com.github.YarikSOffice.Venom:venom-no-op:0.6.0"
    // Dependencies for local unit tests
//    testImplementation project(":sharedTest")
    // Dependencies for android tests
//    androidTestImplementation project(":sharedTest")
//    androidTestImplementation "androidx.test:runner:1.5.2"
//    androidTestImplementation "org.mockito:mockito-android:5.5.0"
//    androidTestImplementation "androidx.room:room-testing:2.6.1"
    // For screenshots
//    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.5.1"
}

tasks.named("build") {
    // don't test, don't lint, don't run detekt for build task.
    setDependsOn(getDependsOn().findAll { it != "check" })
}

allOpen {
    annotation "com.mckimquyen.notes.OpenClass"
}

play {
    serviceAccountCredentials = file("fake-key.json")
}
if (file("publishing.gradle").exists()) {
    apply from: "publishing.gradle"
}

tasks.register("takeScreenshots", Exec) {
    commandLine "./screenshots.sh"
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KSP, you should change the line below to return
        // ["room.schemaLocation=${schemaDir.path}"]
        return ["-Aroom.schemaLocation=${schemaDir.path}".toString()]
    }
}
